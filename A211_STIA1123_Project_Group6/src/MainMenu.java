
import javax.swing.JOptionPane;


public class MainMenu extends javax.swing.JFrame {
    private Owner owner; 
    private BillOperation operation;
    public MainMenu() {
        initComponents();
        operation = new BillOperation();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lbAccountNo = new javax.swing.JLabel();
        lbBillDate = new javax.swing.JLabel();
        lbOwnerName = new javax.swing.JLabel();
        lbOwnerAddress = new javax.swing.JLabel();
        lbArrears = new javax.swing.JLabel();
        lbPreviousReading = new javax.swing.JLabel();
        lbCurrentReading = new javax.swing.JLabel();
        tfAccountNo = new javax.swing.JTextField();
        tfBillDate = new javax.swing.JTextField();
        tfOwnerName = new javax.swing.JTextField();
        tfAddress = new javax.swing.JTextField();
        tfArrears = new javax.swing.JTextField();
        tfPreviousReading = new javax.swing.JTextField();
        tfCurrentReading = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lbCurrentCharge = new javax.swing.JLabel();
        tfTotalUnit = new javax.swing.JTextField();
        lbTotalUnit1 = new javax.swing.JLabel();
        tfCurrentCharge = new javax.swing.JTextField();
        lbTotaBill = new javax.swing.JLabel();
        tfTotalBill = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDisplay = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("ELECTRICITY BILLING SYSTEM");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("OWNER INFORMTION");

        lbAccountNo.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbAccountNo.setText("Account Number:");

        lbBillDate.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbBillDate.setText("Bill Date:");

        lbOwnerName.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbOwnerName.setText("Name:");

        lbOwnerAddress.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbOwnerAddress.setText("Address:");

        lbArrears.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbArrears.setText("Arrears (RM):");

        lbPreviousReading.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbPreviousReading.setText("Previous Reading:");

        lbCurrentReading.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbCurrentReading.setText("Current Reading:");

        tfAccountNo.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfAccountNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAccountNoActionPerformed(evt);
            }
        });

        tfBillDate.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfBillDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBillDateActionPerformed(evt);
            }
        });

        tfOwnerName.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfOwnerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfOwnerNameActionPerformed(evt);
            }
        });

        tfAddress.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAddressActionPerformed(evt);
            }
        });

        tfArrears.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfArrears.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfArrearsActionPerformed(evt);
            }
        });

        tfPreviousReading.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfPreviousReading.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPreviousReadingActionPerformed(evt);
            }
        });

        tfCurrentReading.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfCurrentReading.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCurrentReadingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbOwnerAddress)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lbBillDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfBillDate, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lbOwnerName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfOwnerName, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lbAccountNo)
                                .addGap(18, 18, 18)
                                .addComponent(tfAccountNo, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPreviousReading)
                            .addComponent(lbArrears)
                            .addComponent(lbCurrentReading))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCurrentReading, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfArrears, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPreviousReading, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAccountNo)
                    .addComponent(lbArrears)
                    .addComponent(tfAccountNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfArrears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBillDate)
                    .addComponent(lbPreviousReading)
                    .addComponent(tfBillDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPreviousReading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbOwnerName)
                    .addComponent(lbCurrentReading)
                    .addComponent(tfOwnerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCurrentReading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbOwnerAddress)
                    .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("BILL INFORMATION");

        lbCurrentCharge.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbCurrentCharge.setText("Current Charge (RM):");

        tfTotalUnit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfTotalUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTotalUnitActionPerformed(evt);
            }
        });

        lbTotalUnit1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbTotalUnit1.setText("Total Unit (kWh):");

        tfCurrentCharge.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfCurrentCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCurrentChargeActionPerformed(evt);
            }
        });

        lbTotaBill.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbTotaBill.setText("Total Bill (RM):");

        tfTotalBill.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfTotalBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTotalBillActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnAdd.setText("Calculate & Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDisplay.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnDisplay.setText("Display Record");
        btnDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbTotalUnit1)
                            .addComponent(lbTotaBill))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnDisplay)
                                        .addGap(182, 182, 182))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnReset)
                                            .addComponent(tfTotalBill, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)))
                                .addComponent(btnSearch))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(tfTotalUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbCurrentCharge)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCurrentCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnEdit)
                                .addGap(55, 55, 55)
                                .addComponent(btnDelete)
                                .addGap(46, 46, 46))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnAdd)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCurrentCharge)
                    .addComponent(tfTotalUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCurrentCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTotalUnit1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTotaBill)
                    .addComponent(tfTotalBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDisplay)
                    .addComponent(btnReset)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete)
                    .addComponent(btnSearch))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ta.setColumns(20);
        ta.setRows(5);
        jScrollPane1.setViewportView(ta);

        btnExit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(198, 198, 198))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap(18, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(373, 373, 373)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfAccountNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAccountNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAccountNoActionPerformed

    private void tfBillDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBillDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBillDateActionPerformed

    private void tfOwnerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfOwnerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfOwnerNameActionPerformed

    private void tfAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAddressActionPerformed

    private void tfArrearsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfArrearsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfArrearsActionPerformed

    private void tfPreviousReadingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPreviousReadingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPreviousReadingActionPerformed

    private void tfCurrentReadingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCurrentReadingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCurrentReadingActionPerformed

    private void tfTotalUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTotalUnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTotalUnitActionPerformed

    private void tfCurrentChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCurrentChargeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCurrentChargeActionPerformed

    private void tfTotalBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTotalBillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTotalBillActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        //Calculate &add record
        Boolean status = false;
        String accountNo = tfAccountNo.getText();
        String billDate = tfBillDate.getText();
        String ownerName = tfOwnerName.getText();
        String ownerAddress = tfAddress.getText();
        double arrears = Double.parseDouble(tfArrears.getText()); 
        int previousMeterReading = 0;
        int currentMeterReading = 0;          
        try{
             if(tfPreviousReading.getText().length() == 0){
                 JOptionPane.showMessageDialog(null, "Please enter previous meter reading");
                 status = false;   
             }//if 
             else{ 
                 previousMeterReading = Integer.parseInt(tfPreviousReading.getText());
                 status = true;
        }//else 
         }//try
        catch (Exception e){
             JOptionPane.showMessageDialog(null, "Invalid Previous Meter Reading", "ERROR",JOptionPane.ERROR_MESSAGE);
        }//catch
          try{
             if(tfCurrentReading.getText().length() == 0){
                 JOptionPane.showMessageDialog(null, "Please enter current meter reading");
                 status = false;   
             }//if 
             else{ 
                 currentMeterReading = Integer.parseInt(tfCurrentReading.getText());
                 status = true;
        }//else
         }//try
          catch (Exception e){
             JOptionPane.showMessageDialog(null, "Invalid Current Meter Reading", "ERROR",JOptionPane.ERROR_MESSAGE);
        }//catch
        
        //Calculate totalUnit, currentCharge & totalBill
        if(status == true){  
        int totalUnit = operation.calculateTotalUnit(currentMeterReading, previousMeterReading);
        tfTotalUnit.setText(Integer.toString(totalUnit));
        double currentCharge = operation.calculateCurrentCharge(totalUnit);
        tfCurrentCharge. setText(Double.toString(currentCharge));
        double totalBill = operation.calculateTotalBill(currentCharge, arrears);
        tfTotalBill. setText(Double.toString(totalBill));
        
        //convert int and double variable to String 
        String arrearsString = Double.toString(arrears);
        String previousMeterReadingString = Integer.toString(previousMeterReading);
        String currentMeterReadingString = Integer.toString(currentMeterReading);
        String currentChargeString = Double.toString(currentCharge);
        String totalUnitString = Double.toString(totalUnit);
        String totalBillString = Double.toString(totalBill);
        owner = new Owner(accountNo, billDate, ownerName, ownerAddress, arrearsString, previousMeterReadingString, currentMeterReadingString, totalUnitString, currentChargeString,totalBillString);
        
        //display at textArea
        ta.setText("Account No: " + accountNo + "\nBill Date: " + billDate + "\nName: " + ownerName + "\nAddress: " + ownerAddress + "\nArrears: RM" + arrears
                   + "\nPrevious Meter Reading: " + previousMeterReading + "\nCurrent Meter Reading: " + currentMeterReading + "\nTotal Unit (kWh): " 
                   + totalUnit + "\nCurrent Charge: RM" + currentCharge + "\nTotal Bill: RM" + totalBill);
        
        
        operation.addRecord(owner);// Add Record
        JOptionPane.showMessageDialog(null, "The record has been add successfully");//Display saved successfully message
        
        //Reset input field
        tfAccountNo.setText("");
        tfOwnerName.setText("");
        tfAddress.setText("");
        tfArrears.setText("");
        tfBillDate.setText("");
        tfPreviousReading.setText("");
        tfCurrentReading.setText("");
        tfTotalUnit.setText("");
        tfCurrentCharge.setText("");
        tfTotalBill.setText("");
        }
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayActionPerformed
        //Display all record
        String output = operation.displayAllRecord();
        ta.setText(output);
    }//GEN-LAST:event_btnDisplayActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        //search Record
        String output = "";
        String searchAccountNo = JOptionPane.showInputDialog(this, "Search Account Number : "); //input searchAccountNo
        System.out.println("Search Account Number = " + searchAccountNo);
        Owner owr = operation.searchRecord(searchAccountNo);
        
        if (owr == null) {
            JOptionPane.showMessageDialog(null, "Sorry, the record that does not exist! ");//The record searched is not exit
        } //if
        else {
            JOptionPane.showMessageDialog(null, "The record of " + searchAccountNo + " is found successfully"); // The record searched is exist 
            
            output = "Account No: " + owr.getAccountNo() + "\nBill Date: " + owr.getBillDate() + "\nName: " + owr.getOwnerName() + "\nAddress: " + owr.getOwnerAddress() + "\nArrears: RM" + owr.getArrears()
                   + "\nPrevious Meter Reading: " + owr.getPreviousMeterReading() + "\nCurrent Meter Reading: " + owr.getCurrentMeterReading() + "\nTotal Unit (kWh): " 
                   + owr.getTotalUnit() + "\nCurrent Charge: RM" + owr.getCurrentCharge() + "\nTotal Bill: RM" + owr.getTotalBill();
            
            ta.setText(output); //Display seearched record
            
            String accountNo = owr.getAccountNo();
            String billDate = owr.getBillDate();
            String ownerName = owr.getOwnerName();
            String ownerAddress = owr.getOwnerAddress();
            String arrears = owr.getArrears();
            String previousMeterReading = owr.getPreviousMeterReading();
            String currentMeterReading = owr.getCurrentMeterReading();
            String currentCharge = owr.getCurrentCharge();
            String totalUnit = owr.getTotalUnit();
            String totalBill = owr.getTotalBill();
            
            tfAccountNo.setText(accountNo);
            tfBillDate.setText(billDate);
            tfOwnerName.setText(ownerName);
            tfAddress.setText(ownerAddress);
            tfArrears.setText(arrears);
            tfPreviousReading.setText(previousMeterReading);
            tfCurrentReading.setText(currentMeterReading);
            tfCurrentCharge.setText(currentCharge);
            tfTotalUnit.setText(totalUnit);
            tfTotalBill.setText(totalBill);
        }//else
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        //Reset all input field
        tfAccountNo.setText("");
        tfOwnerName.setText("");
        tfAddress.setText("");
        tfArrears.setText("");
        tfBillDate.setText("");
        tfPreviousReading.setText("");
        tfCurrentReading.setText("");
        tfTotalUnit.setText("");
        tfCurrentCharge.setText("");
        tfTotalBill.setText("");
        ta.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        //Exit button
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        //Edit Record
        Boolean status = false;
        if(tfAccountNo.getText().length() != 0)
          status = true;
        
        if(status == true){
        String accountNo = tfAccountNo.getText();
        String billDate = tfBillDate.getText();
        String ownerName = tfOwnerName.getText();
        String ownerAddress = tfAddress.getText();
        double arrears = Double.parseDouble(tfArrears.getText()); 
        int previousMeterReading = 0;
        int currentMeterReading = 0;          
        try{
             if(tfPreviousReading.getText().length() == 0){
                 JOptionPane.showMessageDialog(null, "Please enter previous meter reading");
                 status = false;   
             }//uf
             else{ 
                 previousMeterReading = Integer.parseInt(tfPreviousReading.getText());
                 status = true;
        }//else 
         }//try
        catch (Exception e){
             JOptionPane.showMessageDialog(null, "Invalid Previous Meter Reading", "ERROR",JOptionPane.ERROR_MESSAGE);
        }//catch
          try{
             if(tfCurrentReading.getText().length() == 0){
                 JOptionPane.showMessageDialog(null, "Please enter current meter reading");
                 status = false;   
             }//if
             else{ 
                 currentMeterReading = Integer.parseInt(tfCurrentReading.getText());
                 status = true;
        }//else
         }//try
          catch (Exception e){
             JOptionPane.showMessageDialog(null, "Invalid Current Meter Reading", "ERROR",JOptionPane.ERROR_MESSAGE);
        }//catch
        
        //Calculate totalUnit, currentCharge & totalBill
        int totalUnit = operation.calculateTotalUnit(currentMeterReading, previousMeterReading);
        tfTotalUnit.setText(Integer.toString(totalUnit));
        double currentCharge = operation.calculateCurrentCharge(totalUnit);
        tfCurrentCharge. setText(Double.toString(currentCharge));
        double totalBill = operation.calculateTotalBill(currentCharge, arrears);
        tfTotalBill. setText(Double.toString(totalBill));
        
        //convert int and double variable to String 
        String arrearsString = (tfArrears.getText());
        String previousMeterReadingString = (tfPreviousReading.getText());
        String currentMeterReadingString = (tfCurrentReading.getText());
        String currentChargeString = (tfCurrentCharge.getText());
        String totalUnitString = (tfTotalUnit.getText());
        String totalBillString = (tfTotalBill.getText());
        owner = new Owner(accountNo, billDate, ownerName, ownerAddress, arrearsString, previousMeterReadingString, currentMeterReadingString, totalUnitString, currentChargeString, totalBillString);
        
        ta.setText("Account No: " + accountNo + "\nBill Date: " + billDate + "\nName: " + ownerName + "\nAddress: " + ownerAddress + "\nArrears: RM" + arrears
                   + "\nPrevious Meter Reading: " + previousMeterReading + "\nCurrent Meter Reading: " + currentMeterReading + "\nTotal Unit (kWh): " 
                   + totalUnit + "\nCurrent Charge: RM" + currentCharge + "\nTotal Bill: RM" + totalBill);
        
        operation.editRecord(owner);//edit record
        JOptionPane.showMessageDialog(this, "The record has been edited successfully");
        
        //Reset all input field
        tfAccountNo.setText("");
        tfOwnerName.setText("");
        tfAddress.setText("");
        tfArrears.setText("");
        tfBillDate.setText("");
        tfPreviousReading.setText("");
        tfCurrentReading.setText("");
        tfTotalUnit.setText("");
        tfCurrentCharge.setText("");
        tfTotalBill.setText("");
        ta.setText("");    
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //Delete record
        
        String searchAccountNo = tfAccountNo.getText();
        operation.deleteRecord(searchAccountNo);
        JOptionPane.showMessageDialog(this, "This record has been deleted successfully");
        //reset all input field
        tfAccountNo.setText("");
        tfOwnerName.setText("");
        tfAddress.setText("");
        tfArrears.setText("");
        tfBillDate.setText("");
        tfPreviousReading.setText("");
        tfCurrentReading.setText("");
        tfTotalUnit.setText("");
        tfCurrentCharge.setText("");
        tfTotalBill.setText("");
        ta.setText("");
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDisplay;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAccountNo;
    private javax.swing.JLabel lbArrears;
    private javax.swing.JLabel lbBillDate;
    private javax.swing.JLabel lbCurrentCharge;
    private javax.swing.JLabel lbCurrentReading;
    private javax.swing.JLabel lbOwnerAddress;
    private javax.swing.JLabel lbOwnerName;
    private javax.swing.JLabel lbPreviousReading;
    private javax.swing.JLabel lbTotaBill;
    private javax.swing.JLabel lbTotalUnit1;
    private javax.swing.JTextArea ta;
    private javax.swing.JTextField tfAccountNo;
    private javax.swing.JTextField tfAddress;
    private javax.swing.JTextField tfArrears;
    private javax.swing.JTextField tfBillDate;
    private javax.swing.JTextField tfCurrentCharge;
    private javax.swing.JTextField tfCurrentReading;
    private javax.swing.JTextField tfOwnerName;
    private javax.swing.JTextField tfPreviousReading;
    private javax.swing.JTextField tfTotalBill;
    private javax.swing.JTextField tfTotalUnit;
    // End of variables declaration//GEN-END:variables
}//classMainMenu
